// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package web

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/vk-rv/warnly/internal/warnly"
)

func Platform(teams []warnly.Team, user *warnly.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Layout(NewProjectTitle, PlatformHtmx(teams), sidebarProjects, user).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func PlatformHtmx(teams []warnly.Team) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(NewProjectTitle)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/platform.templ`, Line: 13, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(AppName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/platform.templ`, Line: 13, Col: 39}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</title><div id=\"content\" x-data=\"projectForm()\" class=\"max-w-6xl p-8 space-y-12 bg-white\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Toast().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<section><h2 class=\"text-xl font-semibold flex items-center gap-2\"><span class=\"flex items-center rounded justify-center w-6 h-6 bg-black text-white text-sm\">1</span> Platforms</h2><div class=\"mt-6\"><nav class=\"flex gap-6 border-b\"><button class=\"pb-2 px-1 border-b-2 border-black text-black\">Supported</button></nav><div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 mt-6\"><button :class=\"{ 'bg-gray-200': selectedPlatform === 'go' }\" @click=\"selectPlatform('go')\" class=\"flex cursor-pointer flex-col items-center p-4 rounded-lg\"><div class=\"w-12 h-12 flex items-center justify-center text-2xl bg-gray-100 rounded-lg mb-2\">Go</div><span class=\"text-xs text-gray-600\">Go</span></button> <button :class=\"{ 'bg-gray-200': selectedPlatform === 'asp' }\" @click=\"selectPlatform('asp')\" class=\"flex cursor-pointer flex-col items-center p-4 rounded-lg\"><div class=\"w-12 h-12 flex items-center justify-center text-2xl bg-gray-100 rounded-lg mb-2\">.NET</div><span class=\"text-xs text-gray-600\">ASP.NET CORE</span></button></div></div></section><section><h2 class=\"text-xl font-semibold flex items-center gap-2\"><span class=\"flex rounded items-center justify-center w-6 h-6 bg-black text-white text-sm\">2</span> Alerts</h2><div class=\"mt-6 space-y-6\"><div class=\"flex items-center space-x-2\"><input @click=\"alerts.highPriority = !alerts.highPriority\" type=\"checkbox\" id=\"high-priority\" name=\"priority\" class=\"text-white bg-black focus:ring-black\"> <label for=\"high-priority\">Alert me on issues</label></div><div class=\"flex flex-wrap md:flex-nowrap items-center gap-4 gap-y-3\"><span class=\"text-gray-600 whitespace-nowrap shrink-0\">When there are more than</span> <input x-model.number=\"alerts.threshold\" type=\"number\" value=\"10\" class=\"w-full md:w-20 p-2 bg-white border border-gray-300 rounded-md shrink-0\"> <select x-model.number=\"alerts.condition\" class=\"w-full md:w-40 p-2 border border-gray-300 rounded-md bg-white shrink-0\"><option value=\"1\">occurrences of</option> <option value=\"2\">users affected by</option></select> <span class=\"text-gray-600 whitespace-nowrap shrink-0\">a unique error in</span> <select x-model.number=\"alerts.timeframe\" class=\"w-full md:w-40 p-2 border border-gray-300 rounded-md bg-white shrink-0\"><option value=\"1\">one minute</option> <option value=\"2\">5 minutes</option> <option value=\"3\">15 minutes</option> <option value=\"4\">one hour</option> <option value=\"5\">one day</option> <option value=\"6\">one week</option> <option value=\"7\">30 days</option></select></div></div></section><section><h2 class=\"text-xl font-semibold flex items-center gap-2\"><span class=\"flex rounded items-center justify-center w-6 h-6 bg-black text-white text-sm\">3</span> Name your project and assign it a team</h2><div class=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\"><div><label for=\"project-name\" class=\"block text-sm font-medium text-gray-700\">Project name</label><div class=\"flex items-center mt-1\"><input x-model=\"projectName\" type=\"text\" id=\"project-name\" placeholder=\"go\" class=\"w-full p-3 border border-gray-300 rounded-md\"></div></div><div><label for=\"team\" class=\"block text-sm font-medium text-gray-700\">Team</label> <select x-model.number=\"team\" id=\"team\" class=\"mt-1 w-full border border-gray-300 rounded-md bg-white p-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, team := range teams {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", team.ID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/platform.templ`, Line: 122, Col: 49}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(team.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/platform.templ`, Line: 122, Col: 63}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</select></div></div><button @click=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs("htmxPost()")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/platform.templ`, Line: 128, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" :class=\"isFormValid ? 'bg-black text-white hover:bg-gray-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\" :disabled=\"!isFormValid\" class=\"px-4 py-2 mt-8 rounded text-sm transition cursor-pointer\">Create Project</button></section></div><script>\n    function projectForm() {\n        return {\n            selectedPlatform: null,\n            alerts: {\n                highPriority: false,\n                threshold: 10,\n                condition: 1,\n                timeframe: 1\n            },\n            projectName: '',\n            team: document.getElementById('team').value,\n            selectPlatform(platform) {\n                this.selectedPlatform = platform;\n            },\n            get isFormValid() {\n                return this.selectedPlatform && this.projectName.trim() !== '' && this.team.trim() !== '';\n            },\n\t\t\tasync htmxPost() {\n\t\t\t\tconst resp = await fetch(`/projects/q?projectName=${encodeURIComponent(this.projectName)}`, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\t\t\t\tif (resp.status === 204) {\n\t\t\t\t\thtmx.ajax('POST', '/projects', { \n\t\t\t\t\t\ttarget: '#content',\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\tplatform: this.selectedPlatform,\n\t\t\t\t\t\t\thighPriority: this.alerts.highPriority,\n\t\t\t\t\t\t\tthreshold: this.alerts.threshold,\n\t\t\t\t\t\t\tcondition: this.alerts.condition,\n\t\t\t\t\t\t\ttimeframe: this.alerts.timeframe,\n\t\t\t\t\t\t\tprojectName: this.projectName,\n\t\t\t\t\t\t\tteam: this.team\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else if (resp.status === 200) {\n\t\t\t\t\tshowToast('Project already exists', 1500);\n\t\t\t\t}\n\t\t\t},\n            serialize() {\n                return JSON.stringify({\n                    platform: this.selectedPlatform,\n                    alerts: this.alerts,\n                    projectName: this.projectName,\n                    team: this.team\n                });\n            }\n        };\n    }\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
