// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package web

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/vk-rv/warnly/internal/warnly"

func Settings(user *warnly.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Layout(SettingsTitle, SettingsHtmx(), sidebarSettings, user).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SettingsHtmx() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(SettingsTitle)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/settings.templ`, Line: 10, Col: 23}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(AppName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/settings.templ`, Line: 10, Col: 37}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</title><div id=\"content\" class=\"flex min-h-screen text-sm\"><div class=\"w-64 text-sm bg-white border-r border-gray-200 p-6\"><nav class=\"space-y-3\"><div class=\"space-y-2\"><h2 class=\"text-xs font-semibold text-gray-500 uppercase\">USER SETTINGS</h2><div class=\"space-y-1\"><button class=\"w-full text-left px-2 py-1 rounded-md hover:bg-gray-100\">General Settings</button></div></div><div class=\"space-y-2\"><h2 class=\"text-xs font-semibold text-gray-500 uppercase\">ORGANIZATION</h2><div class=\"space-y-1\"><button class=\"w-full text-left px-2 py-1 rounded-md bg-black text-white font-semibold\">General Settings</button> <button class=\"w-full text-left px-2 py-1 rounded-md hover:bg-gray-100\">Teams</button> <button class=\"w-full text-left px-2 py-1 rounded-md hover:bg-gray-100\">Members</button></div></div></nav></div><div class=\"flex-1\"><div class=\"bg-white shadow\"><div class=\"px-6 py-4 border-b border-gray-200\"><h2 class=\"text-lg font-semibold\">GENERAL</h2></div><div class=\"p-6 space-y-6\"><div class=\"space-y-4\"><div class=\"space-y-2\"><label class=\"block font-medium\">Organization Slug <span class=\"text-red-500\">*</span></label> <input type=\"text\" value=\"myorg\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"><p class=\"text-sm text-gray-500\">A unique ID used to identify this organization</p></div><div class=\"space-y-2\"><label class=\"block font-medium\">Display Name <span class=\"text-red-500\">*</span></label> <input type=\"text\" value=\"MyOrg\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md\"><p class=\"text-sm text-gray-500\">A human-friendly name for the organization</p></div></div></div></div><div class=\"mt-6 bg-white shadow\"><div class=\"px-6 py-4 border-b border-gray-200\"><h2 class=\"text-lg font-semibold\">MEMBERSHIP</h2></div><div class=\"p-6\"><div class=\"space-y-2\"><label class=\"block font-medium\">Default Role</label> <select class=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-white\"><option>Admin</option> <option>Member</option></select></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
