// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package web

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/vk-rv/warnly/internal/warnly"
)

func EditAlert(user *warnly.User, projects []warnly.Project, alert *warnly.Alert) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Layout("Edit Alert", EditAlertHtmx(user, projects, alert), sidebarAlerts, user).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func EditAlertHtmx(user *warnly.User, projects []warnly.Project, alert *warnly.Alert) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<title>Edit Alert - ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(AppName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/edit_alert.templ`, Line: 13, Col: 30}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><div id=\"content\" class=\"flex-grow overflow-y-auto h-screen\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = EditAlertContent(user, projects, alert).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func EditAlertContent(user *warnly.User, projects []warnly.Project, alert *warnly.Alert) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"max-w-7xl mx-auto p-6\" x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("alertForm(%d, %d, %d, %d, %t, '%s')", alert.ProjectID, alert.Threshold, alert.Condition, alert.Timeframe, alert.HighPriority, alert.RuleName))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/edit_alert.templ`, Line: 20, Col: 199}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Toast().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<!-- Breadcrumbs --><nav class=\"mb-6 border-b border-gray-200\"><div class=\"flex items-center gap-2 text-sm text-gray-600\"><a href=\"/alerts\" hx-get=\"/alerts\" hx-target=\"#content\" hx-swap=\"outerHTML settle:0\" hx-push-url=\"true\" class=\"hover:text-gray-900\">Alerts</a> <span>â€º</span> <span class=\"text-gray-900\">Edit Alert</span></div></nav><!-- Main Content --><main class=\"max-w-4xl\"><h1 class=\"text-2xl font-bold mb-8\">Edit Alert</h1><!-- Step 1: Select Project --><section class=\"mb-8\"><h2 class=\"text-lg font-semibold flex items-center gap-2 mb-4\"><span class=\"flex items-center justify-center w-6 h-6 bg-black text-white text-sm rounded\">1</span> Select Project</h2><div class=\"relative\"><select x-model.number=\"projectId\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg appearance-none bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"><option value=\"0\">Select Project</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, project := range projects {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", project.ID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/edit_alert.templ`, Line: 46, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(project.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/edit_alert.templ`, Line: 46, Col: 69}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</select><div class=\"absolute right-4 top-1/2 -translate-y-1/2 pointer-events-none\"><svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg></div></div></section><!-- Step 2: Configure Alert Conditions --><section class=\"mb-8\"><h2 class=\"text-lg font-semibold flex items-center gap-2 mb-6\"><span class=\"flex items-center justify-center w-6 h-6 bg-black text-white text-sm rounded\">2</span> Configure Alert Conditions</h2><div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\"><div><label class=\"block text-sm font-medium text-gray-700 mb-2\">Threshold</label> <input x-model.number=\"threshold\" type=\"number\" min=\"1\" class=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"10\"><p class=\"mt-1 text-xs text-gray-500\">Number of occurrences or users</p></div><div><label class=\"block text-sm font-medium text-gray-700 mb-2\">Condition</label> <select x-model.number=\"condition\" class=\"w-full px-3 py-2.5 border border-gray-300 rounded-md bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"><option value=\"1\">Occurrences of a unique error</option> <option value=\"2\">Users affected by a unique error</option></select></div><div><label class=\"block text-sm font-medium text-gray-700 mb-2\">Time Window</label> <select x-model.number=\"timeframe\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"><option value=\"1\">1 minute</option> <option value=\"2\">5 minutes</option> <option value=\"3\">15 minutes</option> <option value=\"4\">1 hour</option> <option value=\"5\">1 day</option> <option value=\"6\">1 week</option> <option value=\"7\">30 days</option></select></div></div></section><!-- Step 3: Name the Alert --><section class=\"mb-8\"><h2 class=\"text-lg font-semibold flex items-center gap-2 mb-4\"><span class=\"flex items-center justify-center w-6 h-6 bg-black text-white text-sm rounded\">3</span> Name the Alert</h2><input x-model=\"ruleName\" type=\"text\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"e.g., High Error Rate Alert\"></section><div class=\"flex items-center pt-7\"><input x-model=\"highPriority\" type=\"checkbox\" id=\"high-priority\" class=\"h-4 w-4 text-black border-gray-300 rounded focus:ring-black\"> <label for=\"high-priority\" class=\"ml-2 text-sm text-gray-700\">Mark as high priority</label></div><!-- Action Buttons --><div class=\"flex justify-end gap-3 pt-8 pb-8\"><button hx-get=\"/alerts\" hx-target=\"#content\" hx-swap=\"outerHTML settle:0\" hx-push-url=\"true\" class=\"px-4 py-2 border border-gray-300 rounded text-sm font-medium text-gray-700 hover:bg-gray-50 cursor-pointer\">Cancel</button> <button @click=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("updateAlert(%d)", alert.ID))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/edit_alert.templ`, Line: 135, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" :disabled=\"!isFormValid\" :class=\"isFormValid ? 'bg-black text-white hover:bg-gray-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\" class=\"px-4 py-2 rounded text-sm font-medium transition cursor-pointer\">Update Alert</button></div></main></div><script>\n\t\tfunction alertForm(projectId, threshold, condition, timeframe, highPriority, ruleName) {\n\t\t\treturn {\n\t\t\t\tprojectId: projectId || 0,\n\t\t\t\tthreshold: threshold || 10,\n\t\t\t\tcondition: condition || 1,\n\t\t\t\ttimeframe: timeframe || 4,\n\t\t\t\thighPriority: highPriority || false,\n\t\t\t\truleName: ruleName || '',\n\n\t\t\t\tget isFormValid() {\n\t\t\t\t\treturn this.projectId > 0 && this.ruleName.trim() !== '' && this.threshold > 0;\n\t\t\t\t},\n\n\t\t\t\tupdateAlert(alertId) {\n\t\t\t\t\tif (!this.isFormValid) return;\n\n\t\t\t\t\thtmx.ajax('PUT', `/alerts/${alertId}`, {\n\t\t\t\t\t\ttarget: '#content',\n\t\t\t\t\t\tswap: 'outerHTML',\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\trule_name: this.ruleName,\n\t\t\t\t\t\t\tthreshold: this.threshold,\n\t\t\t\t\t\t\tcondition: this.condition,\n\t\t\t\t\t\t\ttimeframe: this.timeframe,\n\t\t\t\t\t\t\thigh_priority: this.highPriority\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
